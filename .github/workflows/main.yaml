name: ci

on:
  pull_request:
    branches:
      - main

jobs:
  semantic_pull_request:
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/semantic_pull_request.yml@v1

  spell_check:
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/spell_check.yml@v1
    with:
      includes: |
        **/*.{dart,md,yaml}
        !.dart_tool/**/*.{dart,yaml}
        .*/**/*.yml
      runs_on: macos-latest
      modified_files_only: false

  docs:
    runs-on: ubuntu-latest

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v3

      - name: ☕️ Setup Change Filters
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            docs:
              - '.github/actions/docs/action.yaml'
              - 'docs/**'

      - name: 📑 Format, Lint and Build Docs
        uses: ./.github/actions/docs
        if: steps.changes.outputs.docs == 'true'
  
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      packages: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            fluttium_cli: packages/fluttium_cli/**
            fluttium_flow: packages/fluttium_flow/**
            fluttium_runner: packages/fluttium_runner/**

  build:
    needs: changes
    strategy:
      matrix:
        package: ${{ fromJSON(needs.changes.outputs.packages) }}

    runs-on: ubuntu-latest

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v3

      - name: ✨ Format, Analyze and Test (${{ matrix.package }})
        uses: ./.github/actions/dart_package
        with:
          working_directory: packages/${{ matrix.package }}

  pana:
    needs: changes
    strategy:
      matrix:
        package: ${{ fromJSON(needs.changes.outputs.packages) }}

    runs-on: ubuntu-latest

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v3

      - name: 📊 Verify Pana Score (${{ matrix.package }})
        uses: ./.github/actions/pana
        with:
          working_directory: packages/${{ matrix.package }}

  ci:
    needs: [spell_check, semantic_pull_request, docs, build, pana]
    runs-on: ubuntu-latest
    steps:
      - name: noop
        run: echo 'noop'