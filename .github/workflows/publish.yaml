name: publish

on:
  push:
    tags:
      - '*-v*.*.*'

jobs:
  to_publish:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: read

    outputs:
      package: ${{ steps.package.outputs.package }}
      action: ${{ steps.action.outputs.action }}
      brick: ${{ steps.brick.outputs.brick }}

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v3

      - name: 📦 Finding a package to publish
        id: package
        run: |
          tag=${GITHUB_REF#refs/*/}
          package=$(echo $tag | sed -En "s/^(.*)-v(.*)/\1/p")
          if [[ -d "packages/$package" ]]; then
            echo "::set-output name=package::${package}"
          fi

      - name: 💥 Finding an action to publish
        id: action
        if: steps.package.outputs.package == ''
        run: |
          tag=${GITHUB_REF#refs/*/}
          action=$(echo $tag | sed -En "s/^(.*)-v(.*)/\1/p")
          if [[ -d "actions/$action" ]]; then
            echo "::set-output name=action::${action}"
          fi

      - name: 🧱 Finding a brick to publish
        id: brick
        if: steps.package.outputs.action == ''
        run: |
          tag=${GITHUB_REF#refs/*/}
          brick=$(echo $tag | sed -En "s/^(.*)-v(.*)/\1/p")
          if [[ -d "bricks/$brick" ]]; then
            echo "::set-output name=brick::${brick}"
          fi

  failed_to_find:
    needs: to_publish
    if: needs.to_publish.outputs.package == '' && needs.to_publish.outputs.action == '' && needs.to_publish.outputs.brick == ''
    runs-on: ubuntu-latest

    steps:
      - name: 😢 No package, action or brick found
        run: exit 1

  publish_package:
    needs: to_publish
    if: needs.to_publish.outputs.package != ''
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: packages/${{ needs.to_publish.outputs.package }}

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v3

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: 📦 Get Dependencies
        run: flutter pub get

      - name: 🔐 Setup Pub Credentials
        run: |
          mkdir -p $XDG_CONFIG_HOME/dart
          echo '${{ secrets.PUB_CREDENTIALS }}' > "$XDG_CONFIG_HOME/dart/pub-credentials.json"

      - name: 🌵 Dry Run
        run: flutter pub publish --dry-run

      - name: 📢 Publish
        run: flutter pub publish -f
  
  publish_action:
    needs: to_publish
    if: needs.to_publish.outputs.action != ''
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: actions/${{ needs.to_publish.outputs.action }}

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v3

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: 📦 Get Dependencies
        run: flutter pub get

      - name: 🔐 Setup Pub Credentials
        run: |
          mkdir -p $XDG_CONFIG_HOME/dart
          echo '${{ secrets.PUB_CREDENTIALS }}' > "$XDG_CONFIG_HOME/dart/pub-credentials.json"

      - name: 🌵 Dry Run
        run: flutter pub publish --dry-run

      - name: 📢 Publish
        run: flutter pub publish -f

  publish_brick:
    needs: to_publish
    if: needs.to_publish.outputs.brick != ''
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: bricks/${{ needs.to_publish.outputs.brick }}

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v3

      - name: 🎯 Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable

      - name: 🧱 Install mason
        run: dart pub global activate mason_cli

      - name: 🔐 Setup Mason Credentials
        run: |
          mkdir -p $XDG_CONFIG_HOME/mason
          echo '${{ secrets.MASON_CREDENTIALS }}' > "$XDG_CONFIG_HOME/mason/mason-credentials.json"

      - name: 🌵 Dry Run
        run: mason publish --dry-run

      - name: 📢 Publish
        run: mason publish -f